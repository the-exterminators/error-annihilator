# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# GCP Orb for GCP deployment
orbs:
  gcp-cli: circleci/gcp-cli@3.1.0
  cloud-run: circleci/gcp-cloud-run@1.0.2
  gcp-gcr: circleci/gcp-gcr@0.15.1

executors:
  gcloud-executor:
    docker:
      - image: google/cloud-sdk

  machine-executor:
    machine: true

jobs:

  build:
    docker:
      - image: maven:3.8.1-openjdk-17-slim
    environment:
      MAVEN_CLI_OPTS: "--batch-mode"

    steps:
      - checkout
      - run: mvn $MAVEN_CLI_OPTS clean package -Pproduction -e

      - store_artifacts:
          path: target
          destination: target

  test:
    docker:
      - image: maven:3.8.1-openjdk-17-slim
    steps:
      - checkout
      - run:
          name: Save test results
          command: |
            mvn test -e
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results/junit/
          destination: ~/test-results/junit/

  build_push_image_gcr:
    description: Build docker image and push to gcr registry
    executor: gcp-gcr/default
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          dockerfile: Dockerfile
          google-project-id: GOOGLE_PROJECT_ID
          image: $CIRCLE_WORKFLOW_ID
          registry-url: "eu.gcr.io"
          tag: "latest"
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_PROJECT_ID
          image: $CIRCLE_WORKFLOW_ID
          registry-url: "eu.gcr.io"
          tag: "latest"
          steps:
            - run:
                command: |
                  #!/bin/bash 
  
                  IFS="," read -ra DOCKER_TAGS <<< "$ORB_EVAL_TAG"
                  PROJECT_ID="${!ORB_ENV_PROJECT_ID}"
  
                  for tag_to_eval in "${DOCKER_TAGS[@]}"; do
                  TAG=$(eval echo "$tag_to_eval")
                  docker push "$ORB_VAL_REGISTRY_URL/$PROJECT_ID/$(echo "$ORB_VAL_IMAGE" | tr '[:upper:]' '[:lower:]'):$TAG"
                  done
  
                  if [ -n "$ORB_VAL_DIGEST_PATH" ]; then
                  mkdir -p "$(dirname "$ORB_VAL_DIGEST_PATH")"
                  SAMPLE_FIRST=$(eval echo "${DOCKER_TAGS[0]}")
                  docker image inspect --format="{{index .RepoDigests 0}}" "$ORB_VAL_REGISTRY_URL/$PROJECT_ID/$(echo "$ORB_VAL_IMAGE" | tr '[:upper:]' '[:lower:]'):$SAMPLE_FIRST" > "$ORB_VAL_DIGEST_PATH"
                  fi
                  

  gcp_cloud_run_deploy:
    description: Deploy using cloud run
    executor: machine-executor
    steps:
      - cloud-run/init
      - cloud-run/deploy:
          platform: 'managed'
          image: 'eu.gc.io/$GOOGLE_PROJECT_ID/$CIRCLE_WORKFLOW_ID'
          service-name: 'error-annihilator'
          region: GOOGLE_COMPUTE_REGION
          unauthenticated: true

workflows:
  push-image-and-deploy-to-gcr:
    jobs:
      - build_push_image_gcr
#      - gcp_cloud_run_deploy:
#          requires:
#            - build_push_image_gcr

  Test-and-Build:
    jobs:
      - build
      - test:
          requires:
            - build